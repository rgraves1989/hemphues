{
  "name": "slideout",
  "repository": {
    "type": "git",
    "url": "git@github.com:mango/slideout.git"
  },
  "description": "A touch slideout navigation menu for your mobile web apps.",
  "author": {
    "name": "Guille Paz",
    "email": "guille87paz@gmail.com"
  },
  "version": "0.1.11",
  "scripts": {
    "build": "node browserify.js",
    "test": "npm run build && _mocha",
    "dist": "node browserify.js && uglifyjs ./dist/slideout.js -m -o ./dist/slideout.min.js",
    "hint": "jshint index.js"
  },
  "dependencies": {
    "decouple": "0.0.1",
    "emitter": "git+https://github.com/Mango/emitter.git#0.0.7"
  },
  "devDependencies": {
    "better-assert": "1.0.1",
    "browserify": "7.0.3",
    "jsdom": "3.1.1",
    "mocha": "2.1.0",
    "uglify-js": "2.4.15",
    "jshint": "2.6.3"
  },
  "main": "index.js",
  "keywords": [
    "slideout",
    "offcanvas",
    "menu",
    "touch"
  ],
  "license": "MIT",
  "spm": {
    "dependencies": {
      "decouple": "0.0.2",
      "emitter": "git+https://github.com/Mango/emitter.git#0.0.7"
    },
    "main": "index.js"
  },
  "filename": "slideout.min.js",
  "autoupdate": {
    "source": "git",
    "target": "git://github.com/Mango/slideout.git",
    "basePath": "dist",
    "files": [
      "*.js"
    ]
  },
  "readme": "# Slideout.js [![NPM version][npm-image]][npm-link] [![Build status][travis-image]][travis-link] [![devDependency status][devdeps-image]][devdeps-link]\n\n> A touch slideout navigation menu for your mobile web apps.\n\n## Features\n\n- Dependency-free.\n- Simple markup.\n- Native scrolling.\n- Easy customization.\n- CSS transforms & transitions.\n- Just 2 Kb! (min & gzip)\n\n## Demo\n\n[Check out the demo](https://mango.github.io/slideout/) to see it in action (on your mobile or emulate touches on your browser).\n\n<img src=\"https://i.imgur.com/AWgwlVW.gif\" alt=\"Slideout.js demo\">\n\n## Installation\n\nSlideout is available on cdnjs\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/slideout/0.1.11/slideout.min.js\"></script>\n```\n\nAlso you can use one of many package managers\n\n    $ npm install slideout\n\n    $ spm install slideout\n\n    $ bower install slideout.js\n\n    $ component install mango/slideout\n\n## Usage\n\nImplementing Slideout.js into your project is easy.\n\nFirst of all, you'll need to create your markup. You should have a menu (`#menu`) and a main content (`#panel`) into your body.\n\n```html\n<nav id=\"menu\">\n  <header>\n    <h2>Menu</h2>\n  </header>\n</nav>\n\n<main id=\"panel\">\n  <header>\n    <h2>Panel</h2>\n  </header>\n</main>\n```\n\nAdd the Slideout.js styles (index.css) in your web application.\n\n```css\nbody {\n  width: 100%;\n  height: 100%;\n}\n\n.slideout-menu {\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 0;\n  width: 256px;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  display: none;\n}\n\n.slideout-panel {\n  position:relative;\n  z-index: 1;\n}\n\n.slideout-open,\n.slideout-open body,\n.slideout-open .slideout-panel {\n  overflow: hidden;\n}\n\n.slideout-open .slideout-menu {\n  display: block;\n}\n```\n\nThen you just include Slideout.js and create a new instance with some options:\n\n```html\n<script src=\"dist/slideout.min.js\"></script>\n<script>\n  var slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    'padding': 256,\n    'tolerance': 70\n  });\n</script>\n```\n\n#### Full example\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Slideout Demo</title>\n    <meta http-equiv=\"cleartype\" content=\"on\">\n    <meta name=\"MobileOptimized\" content=\"320\">\n    <meta name=\"HandheldFriendly\" content=\"True\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\">\n    <style>\n      body {\n        width: 100%;\n        height: 100%;\n      }\n\n      .slideout-menu {\n        position: fixed;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        right: 0;\n        z-index: 0;\n        width: 256px;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n        display: none;\n      }\n\n      .slideout-panel {\n        position:relative;\n        z-index: 1;\n      }\n\n      .slideout-open,\n      .slideout-open body,\n      .slideout-open .slideout-panel {\n        overflow: hidden;\n      }\n\n      .slideout-open .slideout-menu {\n        display: block;\n      }\n    </style>\n  </head>\n  <body>\n\n    <nav id=\"menu\">\n      <h2>Menu</h2>\n    </nav>\n\n    <main id=\"panel\">\n      <header>\n        <button class=\"toggle-button\">☰</button>\n        <h2>Panel</h2>\n      </header>\n    </main>\n\n    <script src=\"dist/slideout.min.js\"></script>\n    <script>\n      var slideout = new Slideout({\n        'panel': document.getElementById('panel'),\n        'menu': document.getElementById('menu'),\n        'padding': 256,\n        'tolerance': 70\n      });\n\n      // Toggle button\n      document.querySelector('.toggle-button').addEventListener('click', function() {\n        slideout.toggle();\n      });\n    </script>\n\n  </body>\n</html>\n```\n\n## Browser Support\n\n- Chrome (IOS, Android, desktop)\n- Firefox (Android, desktop)\n- Safari (IOS, Android, desktop)\n- Opera (desktop)\n- IE 10+ (desktop)\n\n## API\n\n### Slideout(options)\nCreate a new instance of `Slideout`.\n\n- `options` (Object) - Options to customize a new instance of Slideout.\n- `options.panel` (HTMLElement) - The DOM element that contains all your application content (`.slideout-panel`).\n- `options.menu` (HTMLElement) - The DOM element that contains your menu application (`.slideout-menu`).\n- `[options.duration]` (Number) - The time (milliseconds) to open/close the slideout. Default: `300`.\n- `[options.fx]` (String) - The CSS effect to use when animating the opening and closing of the slideout. Default: `ease`.\n- `[options.padding]` (Number) - Default: `256`.\n- `[options.tolerance]` (Number) - Default: `70`.\n- `[options.touch]` (Boolean) - Set this option to false to disable Slideout touch events. Default: `true`.\n- `[options.side]` (String) - The side to open the slideout (`left` or `right`). Default: `left`.\n\n```js\nvar slideout = new Slideout({\n  'panel': document.getElementById('main'),\n  'menu': document.getElementById('menu'),\n  'padding': 256,\n  'tolerance': 70\n});\n```\n\n### Slideout.open();\nOpens the slideout menu. It emits `beforeopen` and `open` events.\n\n```js\nslideout.open();\n```\n\n### Slideout.close();\nCloses the slideout menu. It emits `beforeclose` and `close` events.\n\n```js\nslideout.close();\n```\n\n### Slideout.toggle();\nToggles (open/close) the slideout menu.\n\n```js\nslideout.toggle();\n```\n\n### Slideout.isOpen();\nReturns `true` if the slideout is currently open, and `false` if it is closed.\n\n```js\nslideout.isOpen(); // true or false\n```\n\n### Slideout.destroy();\nCleans up the instance so another slideout can be created on the same area.\n\n```js\nslideout.destroy();\n```\n\n### Slideout.enableTouch();\nEnables opening the slideout via touch events.\n\n```js\nslideout.enableTouch();\n```\n\n### Slideout.disableTouch();\nDisables opening the slideout via touch events.\n\n```js\nslideout.disableTouch();\n```\n\n### Slideout.on(event, listener);\n```js\nslideout.on('open', function() { ... });\n```\n\n### Slideout.once(event, listener);\n```js\nslideout.once('open', function() { ... });\n```\n\n### Slideout.off(event, listener);\n```js\nslideout.off('open', listener);\n```\n\n### Slideout.emit(event, ...data);\n```js\nslideout.emit('open');\n```\n\n## Events\n\nAn instance of Slideout emits the following events:\n\n- `beforeclose`\n- `close`\n- `beforeopen`\n- `open`\n- `translate`\n\nThe slideout emits `translate` event only when it is opening/closing via touch events.\n\n```js\nslideout.on('translate', function(translated) {\n  console.log(translated); // 120 in px\n});\n```\n\n## npm-scripts\n```\n$ npm run build\n```\n\n```\n$ npm run dist\n```\n\n```\n$ npm test\n```\n\n```\n$ npm run hint\n```\n\n## FAQ\n\n### How to add a toggle button.\n\n```js\n// vanilla js\ndocument.querySelector('.toggle-button').addEventListener('click', function() {\n  slideout.toggle();\n});\n\n// jQuery\n$('.toggle-button').on('click', function() {\n    slideout.toggle();\n});\n```\n\n### How to open slideout from right side.\n\nYou should define `left: auto` on the class `.slideout-menu`.\n```css\n.slideout-menu {\n  left: auto;\n}\n```\n\nThen, use the `side` option with the value `right`.\n```js\nvar slideout = new Slideout({\n  'panel': document.getElementById('content'),\n  'menu': document.getElementById('menu'),\n  'side': 'right'\n});\n```\n\n## With ❤ by\n- Guille Paz (Front-end developer | Web standards lover)\n- E-mail: [guille87paz@gmail.com](mailto:guille87paz@gmail.com)\n- Twitter: [@pazguille](http://twitter.com/pazguille)\n- Web: [http://pazguille.me](http://pazguille.me)\n\n## License\nMIT license. Copyright © 2015 [Mango](http://getmango.com).\n\n[npm-image]: https://img.shields.io/npm/v/slideout.svg?style=flat\n[npm-link]: https://npmjs.org/package/slideout\n[travis-image]: https://img.shields.io/travis/Mango/slideout.svg?style=flat\n[travis-link]: https://travis-ci.org/Mango/slideout\n[devdeps-image]: https://img.shields.io/david/dev/mango/slideout.svg?style=flat\n[devdeps-link]: https://david-dm.org/mango/slideout#info=peerDependencies\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mango/slideout/issues"
  },
  "_id": "slideout@0.1.11",
  "_from": "slideout@"
}
