{
  "name": "decouple",
  "repository": {
    "type": "git",
    "url": "git@github.com:pazguille/decouple.git"
  },
  "description": "Decouple the DOM events from expensive functions.",
  "author": {
    "name": "@pazguille",
    "email": "guille87paz@gmail.com"
  },
  "version": "0.0.1",
  "scripts": {
    "start": "gulp",
    "test": "gulp test"
  },
  "devDependencies": {
    "gulp": "^3.6.2",
    "gulp-footer": "^1.0.5",
    "gulp-header": "^1.0.5",
    "gulp-mocha": "^0.5.2",
    "gulp-rename": "^1.2.0",
    "gulp-replace": "^0.4.0",
    "gulp-uglify": "^0.3.1",
    "mkdirp": "^0.3.5",
    "better-assert": "^1.0.1"
  },
  "main": "index.js",
  "keywords": [
    "decouple",
    "events",
    "dom events"
  ],
  "license": "MIT",
  "readme": "# decouple\n\nDecouple the DOM events from expensive functions.\n\n## Based on\n- [Paul Lewis](https://twitter.com/aerotwist)'s article [Leaner, Meaner, Faster Animations with requestAnimationFrame](http://www.html5rocks.com/en/tutorials/speed/animations).\n- [Paul Lewis](https://twitter.com/aerotwist)'s article [Scrolling Performance](http://www.html5rocks.com/en/tutorials/speed/scrolling).\n- [How to make faster scroll effects?](https://gist.github.com/Warry/4254579)\n- [Fixing a parallax scrolling website to run in 60 FPS](http://kristerkari.github.io/adventures-in-webkit-land/blog/2013/08/30/fixing-a-parallax-scrolling-website-to-run-in-60-fps/)\n- [John Resig](https://twitter.com/jeresig)'s article [Learning from Twitter](http://ejohn.org/blog/learning-from-twitter/).\n\n## Demo\n[TODO]\n\n## Installation\n\n    $ npm install decouple\n\n### Standalone\nAlso, you can use the standalone version:\n```html\n<script src=\"dist/decouple.js\"></script>\n```\n\n## How-to\n```js\nvar decouple = require('decouple');\n```\n\nNow, define a listener for any HTMLElement:\n```js\nfunction foo(event) {\n  console.log('foo');\n\n  // The function receive the scroll event as parameter.\n  console.log(event);\n\n  // The function context is the given node.\n  console.log(this.scrollTop);\n}\n\nfunction bar() {\n  console.log('bar');\n}\n```\n\nThen:\n```js\ndecouple(document.querySelector('#box'), 'scroll', foo);\n```\n\n## API\n\n### decouple(node, event, listener)\nDecouple the DOM `event` from the `listener` on give `node`.\n- `node` {HTMLElement} - A given `HTMLElement`.\n- `event` {String} - A given DOM `event`.\n- `listener` {Function} - A given `listener` to execute when the given `event` is fired.\n\n```js\ndecouple(window, 'scroll', fn);\n```\n\n## Maintained by\n- Guille Paz (Front-end developer | Web standards lover)\n- E-mail: [guille87paz@gmail.com](mailto:guille87paz@gmail.com)\n- Twitter: [@pazguille](http://twitter.com/pazguille)\n- Web: [http://pazguille.me](http://pazguille.me)\n\n## License\nLicensed under the MIT license.\n\nCopyright (c) 2014 [@pazguille](http://twitter.com/pazguille).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pazguille/decouple/issues"
  },
  "_id": "decouple@0.0.1",
  "_from": "decouple@0.0.1"
}
